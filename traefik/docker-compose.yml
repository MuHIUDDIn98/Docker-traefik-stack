version: '3.8'

services:
  traefik:
    image: "traefik:v3.5"
    container_name: "traefik-proxy"
    env_file: .env
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    command:
      # --- NEW: Logging for Debugging ---
      - "--log.level=INFO"

      # --- API, Providers, & Dynamic Config ---
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik-public"
      - "--providers.file.directory=/dynamic_conf"

      # --- Enable Prometheus Metrics ---
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entrypoint=metrics"

      # --- Entrypoints (Ports) ---
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.metrics.address=:8082"

      # --- Global HTTP to HTTPS Redirect ---
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # --- Let's Encrypt (ACME) with DNS-01 Challenge ---
      - "--certificatesresolvers.myresolver.acme.email=${MY_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"

      # --- Wildcard Certificate Request (CORRECTED: Using Indexed Array [0]) ---
      # This is the safest CLI syntax for nested domain arrays.
      - "--certificatesresolvers.myresolver.acme.domains[0].main=${MY_DOMAIN}"
      - "--certificatesresolvers.myresolver.acme.domains[0].sans=*.${MY_DOMAIN}"

      # --- Attach the resolver to our HTTPS entrypoint ---
      - "--entrypoints.websecure.http.tls.certresolver=myresolver"

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik-certs:/letsencrypt"
      - "./dynamic_conf:/dynamic_conf:ro"

    networks:
      - traefik-public

    labels:
      # --- Secure the Dashboard ---
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${MY_DOMAIN}`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.middlewares=authelia-auth@file,sec-headers@file"

volumes:
  traefik-certs:

networks:
  traefik-public:
    external: true